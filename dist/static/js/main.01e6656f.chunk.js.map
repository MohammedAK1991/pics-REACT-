{"version":3,"sources":["api/unsplash.js","Footer.js","ImageCard.js","ImageList.js","Main.js","App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","Footer","Segment","inverted","vertical","style","backgroundColor","Container","textAlign","Image","centered","size","src","List","horizontal","divided","link","Item","as","href","target","Icon","name","ImageCard","props","React","useState","spans","setSpans","imageRef","useRef","className","gridRowEnd","ref","alt","image","title","preview_photos","urls","regular","onLoad","height","current","clientHeight","calculatedSpans","Math","ceil","toUpperCase","Imagelist","images","map","key","id","isLoading","Dimmer","active","Loader","length","minHeight","paddingTop","Main","onSubmit","contextRef","term","setTerm","fontFamily","Sticky","context","Menu","attached","tabular","marginLeft","fontSize","position","event","preventDefault","Input","maxWidth","minWidth","value","onChange","icon","circular","color","placeholder","collectionNames","App","setImages","setIsLoading","useEffect","unsplash","get","params","query","pop","toString","per_page","then","res","data","results","shuffle","marginTop","ReactDOM","render","document","querySelector"],"mappings":"+NAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cACE,2D,4CCGK,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,CAASC,UAAQ,EAACC,UAAQ,EACxBC,MAAO,CACLC,gBAAiB,uBAGnB,kBAACC,EAAA,EAAD,CAAWC,UAAU,UACnB,kBAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,OAAOC,IAAI,gBAChC,kBAACC,EAAA,EAAD,CAAMC,YAAU,EAACC,SAAO,EAACC,MAAI,EAACL,KAAK,SAEjC,kBAACE,EAAA,EAAKI,KAAN,CAAWC,GAAG,IAAIC,KAAK,uCAAuCC,OAAO,UACnE,kBAACC,EAAA,EAAD,CAAML,MAAI,EAACM,KAAK,iBAAiBX,KAAK,WAExC,kBAACE,EAAA,EAAKI,KAAN,CAAWC,GAAG,IAAIC,KAAK,wCAAwCC,OAAO,UACpE,kBAACC,EAAA,EAAD,CAAML,MAAI,EAACM,KAAK,gBAAgBX,KAAK,WAEvC,kBAACE,EAAA,EAAKI,KAAN,CAAWC,GAAG,IAAIC,KAAK,oCAAoCC,OAAO,UAChE,kBAACC,EAAA,EAAD,CAAML,MAAI,EAACM,KAAK,eAAeX,KAAK,WAEtC,kBAACE,EAAA,EAAKI,KAAN,CAAWC,GAAG,IAAIC,KAAK,yDAAyDC,OAAO,UACrF,kBAACC,EAAA,EAAD,CAAML,MAAI,EAACM,KAAK,oBAAoBX,KAAK,c,+BC5BtC,SAASY,EAAWC,GAAQ,IAAD,EAGdC,IAAMC,SAAS,GAHD,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAKlCC,EAAWJ,IAAMK,SASvB,OACE,yBACEC,UAAU,aACV1B,MAAO,CAAE2B,WAAW,QAAD,OAAUL,KAC7B,yBACEM,IAAKJ,EACLK,IAAKV,EAAMW,MAAMC,MACjBxB,IAAKY,EAAMW,MAAME,eAAe,GAAGC,KAAKC,QACxCC,OAdgB,WACpB,IAAMC,EAASZ,EAASa,QAAQC,aAC1BC,EAAkBC,KAAKC,KAAKL,EAAS,GAAK,IAChDb,EAASgB,MAaP,2BACGpB,EAAMW,MAAMC,MAAMW,eAAgB,4B,sBCQ5BC,G,OA7BG,SAACxB,GACjB,IAAMyB,EAASzB,EAAMyB,OAAOC,KAAI,SAACf,GAC/B,OAAO,kBAACZ,EAAD,CAAW4B,IAAKhB,EAAMiB,GAAIjB,MAAOA,OAG1C,OAAGX,EAAM6B,UAEL,kBAACnD,EAAA,EAAD,CAASG,MAAO,CAACoC,OAAO,UACtB,kBAACa,EAAA,EAAD,CAAQC,QAAM,EAACpD,UAAQ,GACrB,kBAACqD,EAAA,EAAD,CAAQ7C,KAAK,OAAb,aAMHsC,EAAOQ,OAQV,yBAAK1B,UAAU,cACZkB,GAPD,wBAAI5C,MAAO,CAACG,UAAU,SAAUkD,UAAW,OAAQC,WAAW,SAA9D,uBCnBS,SAASC,EAAT,GAAgD,IAAhCX,EAA+B,EAA/BA,OAAQY,EAAuB,EAAvBA,SAAUR,EAAa,EAAbA,UACzCS,EAAahC,mBADyC,EAGpCJ,mBAAS,MAH2B,mBAGrDqC,EAHqD,KAG/CC,EAH+C,KAU5D,OACE,yBAAK/B,IAAK6B,EAAYzD,MAAO,CAAE4D,WAAY,WACzC,kBAACC,EAAA,EAAD,CAAQC,QAASL,GACf,kBAACM,EAAA,EAAD,CACEC,SAAS,MACTC,SAAO,EACPjE,MAAO,CAAEC,gBAAiB,OAAQqD,WAAY,QAE9C,kBAACS,EAAA,EAAKnD,KAAN,CAAWC,GAAG,IAAIC,KAAK,KACrB,yBAAKP,IAAI,eACT,0BAAMP,MAAO,CAAE4D,WAAY,SAAUM,WAAY,MAAOC,SAAU,SAAlE,qBAIF,kBAACJ,EAAA,EAAKA,KAAN,CAAWK,SAAS,SAClB,kBAACL,EAAA,EAAKnD,KAAN,KACE,0BAAM4C,SArBG,SAACa,GACpBA,EAAMC,iBACNd,EAASE,KAoBG,kBAACa,EAAA,EAAD,CACEvE,MAAO,CAAEwE,SAAU,OAAQC,SAAU,eACrCC,MAAOhB,EAEPiB,SAAU,SAACN,GAAD,OAAWV,EAAQU,EAAMtD,OAAO2D,QAE1CE,KAAM,CAAE3D,KAAM,SAAUN,MAAM,EAAMkE,UAAU,EAAMC,MAAO,UAC3DC,YAAY,iCAOxB,kBAAClF,EAAA,EAAD,CAASmE,SAAS,UAChB,kBAAC,EAAD,CAAWpB,OAAQA,EAAQI,UAAWA,M,qBCxC1CgC,EAAkB,CAAC,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,SAAU,QAAS,eAGrE,SAAUC,IAAQ,IAAD,EAEF5D,mBAAS,IAFP,mBAEvBuB,EAFuB,KAEfsC,EAFe,OAGI7D,oBAAS,GAHb,mBAGvB2B,EAHuB,KAGZmC,EAHY,KAK9BC,qBAAU,WACRC,EACGC,IAAI,sBAAuB,CAC1BC,OAAQ,CACNC,MAAOR,EAAgBS,MAAMC,WAC7BC,SAAU,KAGbC,MAAK,SAACC,GACLX,EAAUW,EAAIC,KAAKC,YAEpBH,MAAK,WACJP,EACGC,IAAI,sBAAuB,CAC1BC,OAAQ,CACNC,MAAOR,EAAgBS,MAAMC,WAC7BC,SAAU,KAGbC,MAAK,SAACC,GACLX,GAAU,SAAAtC,GAAM,4BAAQA,GAAR,YAAmBiD,EAAIC,KAAKC,mBAGjDH,MAAK,WACJP,EACGC,IAAI,sBAAuB,CAC1BC,OAAQ,CACNC,MAAOR,EAAgBS,MAAMC,WAC7BC,SAAU,KAGbC,MAAK,SAACC,GACLV,GAAa,GACbD,GAAU,SAAAtC,GAAM,4BAAQA,GAAR,YAAmBiD,EAAIC,KAAKC,qBAGnD,IAiBH,OACE,oCACE,kBAACxC,EAAD,CACEX,OAAQoD,IAAQpD,GAChBI,UAAWA,EACXQ,SApBW,SAACE,GAChByB,GAAa,GACbE,EACGC,IAAI,sBAAuB,CAC1BC,OAAQ,CACNC,MAAO9B,EAAKgC,WACZC,SAAU,MAGbC,MAAK,SAACC,GACLX,EAAUW,EAAIC,KAAKC,SACnBZ,GAAa,OAUbnF,MAAO,CAAEiG,UAAW,KAEtB,kBAACrG,EAAD,OApENoF,EAAkBgB,IAAQhB,GCH1BkB,IAASC,OACL,kBAAClB,EAAD,MACAmB,SAASC,cAAc,Y","file":"static/js/main.01e6656f.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization:\n          'Client-ID dS5eABsdXxYSaKvrkWUQ0M--dLPJxjv_QQOz1B6_zfA'\n    }\n});\n\n","import React from 'react';\nimport {\n  Container,\n  Icon,\n  Image,\n  List,\n  Segment,\n} from 'semantic-ui-react'\n\nexport default function Footer() {\n  return (\n    <Segment inverted vertical\n      style={{\n        backgroundColor :'rgb(236, 236, 236)',\n      }}\n    >\n      <Container textAlign='center'>\n        <Image centered size='mini' src='/qoala2.svg' />\n        <List horizontal divided link size='large'\n        >\n          <List.Item as='a' href='https://www.instagram.com/mohmedak_/' target=\"_blank\">\n            <Icon link name='instagram blue' size='large' />\n          </List.Item>\n          <List.Item as='a' href='https://www.linkedin.com/in/mohmedak/' target=\"_blank\">\n            <Icon link name='linkedin blue' size='large' />\n          </List.Item>\n          <List.Item as='a' href='https://github.com/MohammedAK1991' target=\"_blank\">\n            <Icon link name='github black' size='large' />\n          </List.Item>\n          <List.Item as='a' href='https://mohammedak1991.github.io/mohammedak.github.io/' target=\"_blank\">\n            <Icon link name='user secret black' size='large' />\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  )\n}\n","import React from 'react';\n\nexport default function ImageCard (props) {\n\n\n  const [spans, setSpans] = React.useState(0);\n\n  const imageRef = React.useRef();\n\n\n  const setImageSpans = () => {\n    const height = imageRef.current.clientHeight;\n    const calculatedSpans = Math.ceil(height / 10 + 0.5);\n    setSpans(calculatedSpans);\n  }\n\n  return (\n    <div\n      className=\"image-card\"\n      style={{ gridRowEnd: `span ${spans}` }}>\n      <img\n        ref={imageRef}\n        alt={props.image.title}\n        src={props.image.preview_photos[0].urls.regular}\n        onLoad={setImageSpans}\n      />\n      <p>\n        {props.image.title.toUpperCase()|| 'no description provided'}\n      </p>\n    </div>\n  )\n\n}\n\n// export default ImageCard;\n\n/*\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { spans: 0 };\n\n    this.imageRef = React.createRef();\n  }\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10 + 0.5);\n    this.setState({ spans: spans });\n  };\n\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img\n          ref={this.imageRef}\n          alt={this.props.image.description}\n          src={this.props.image.urls.regular}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n*/","import React from 'react';\nimport ImageCard from './ImageCard';\nimport { Dimmer, Loader, Segment } from 'semantic-ui-react'\nimport './ImageList.css';\n\n\nconst Imagelist = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id} image={image} />;\n  })\n\n  if(props.isLoading) {\n    return (\n      <Segment style={{height:'100vh'}}>\n        <Dimmer active inverted>\n          <Loader size='big'>Loading</Loader>\n        </Dimmer>\n      </Segment>\n    )\n  }\n\n  if (!images.length) {\n    return (\n      <h1 style={{textAlign:'center', minHeight: '75vh', paddingTop:'30vh'}}>\n        No Images to show\n      </h1>\n    )\n  }\n  return (\n    <div className=\"image-list\">\n      {images}\n    </div>\n  )\n}\n\nexport default Imagelist;","import React, { useRef, useState } from 'react'\nimport { Input, Menu, Segment, Sticky } from 'semantic-ui-react';\nimport ImageList from './ImageList';\n\nexport default function Main({ images, onSubmit, isLoading }) {\n  const contextRef = useRef();\n\n  const [term, setTerm] = useState(null);\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(term);\n  }\n\n  return (\n    <div ref={contextRef} style={{ fontFamily: 'Avenir' }}>\n      <Sticky context={contextRef}>\n        <Menu\n          attached='top'\n          tabular\n          style={{ backgroundColor: '#fff', paddingTop: '0em' }}\n        >\n          <Menu.Item as='a' href=\"/\">\n            <img src=\"/qoala.svg\" />\n            <span style={{ fontFamily: 'Avenir', marginLeft: '5px', fontSize: '22px' }}>\n              Qoala Assignment\n            </span>\n          </Menu.Item>\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              <form onSubmit={onFormSubmit} >\n                <Input\n                  style={{ maxWidth: '30vw', minWidth: 'fit content' }}\n                  value={term}\n                  // onClick={onFormSubmit}\n                  onChange={(event) => setTerm(event.target.value)}\n                  // transparent\n                  icon={{ name: 'search', link: true, circular: true, color: 'orange' }}\n                  placeholder='Search for a collection'\n                />\n              </form>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n      </Sticky>\n      <Segment attached='bottom'>\n        <ImageList images={images} isLoading={isLoading} />\n      </Segment>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport unsplash from './api/unsplash';\nimport Footer from './Footer';\nimport Main from './Main';\nimport shuffle from \"lodash/shuffle\";\n\nlet collectionNames = ['kids', 'food', 'travel', 'dogs', 'beer', 'guitar', 'books', 'video games']\ncollectionNames = shuffle(collectionNames);\n\nexport default function  App () {\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    unsplash\n      .get('/search/collections', {\n        params: {\n          query: collectionNames.pop().toString(),\n          per_page: 6//eslint-disable-line\n        },\n      })\n      .then((res) => {\n        setImages(res.data.results);\n      })\n      .then(() => {\n        unsplash\n          .get('/search/collections', {\n            params: {\n              query: collectionNames.pop().toString(),\n              per_page: 6//eslint-disable-line\n            },\n          })\n          .then((res) => {\n            setImages(images => [...images, ...res.data.results]);\n          })\n      })\n      .then(() => {\n        unsplash\n          .get('/search/collections', {\n            params: {\n              query: collectionNames.pop().toString(),\n              per_page: 6 //eslint-disable-line\n            },\n          })\n          .then((res) => {\n            setIsLoading(false);\n            setImages(images => [...images, ...res.data.results]);\n          })\n      })\n  }, []);//eslint-disable-line\n\n  const onSubmit = (term) => {\n    setIsLoading(true);\n    unsplash\n      .get('/search/collections', {\n        params: {\n          query: term.toString(),\n          per_page: 15//eslint-disable-line\n        },\n      })\n      .then((res) => {\n        setImages(res.data.results);\n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <>\n      <Main\n        images={shuffle(images)}\n        isLoading={isLoading}\n        onSubmit={onSubmit}\n        style={{ marginTop: 0 }}\n      />\n      <Footer/>\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n    <App /> ,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}